{"version":3,"sources":["components/MatchDetailCard.js","components/MatchSmallCard.js","pages/TeamPage.js","components/YearSelector.js","pages/MatchPage.js","components/TeamTile.js","pages/HomePage.js","App.js","reportWebVitals.js","index.js"],"names":["MatchDetailCard","teamName","match","otherTeam","team1","team2","otherTeamRoute","isMatchWon","matchWinner","className","to","date","venue","resultMargin","result","playerOfMatch","umpire1","umpire2","MatchSmallCard","TeamPage","useState","matches","team","setTeam","useParams","useEffect","a","fetch","process","response","json","data","console","log","fetchMatches","title","value","totalMatches","totalWins","color","slice","map","id","YearSelector","years","i","push","year","MatchPage","setMatches","TeamTile","HomePage","teams","setTeams","fetchAllTeams","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f5c87549.chunk.js","sourcesContent":["import { React } from 'react';\nimport { Link } from 'react-router-dom';\nimport \"./MatchDetailCard.scss\";\n\nexport const MatchDetailCard = ({ teamName, match }) => {\n    if (!match) return null;\n    const otherTeam = (match.team1 === teamName ? match.team2 : match.team1)\n    const otherTeamRoute = `/teams/${otherTeam}`\n    const isMatchWon =  teamName === match.matchWinner \n\n    return (\n        <div className={isMatchWon ? 'MatchDetailCard won-card' : 'MatchDetailCard lost-card'}>\n           \n         <div>  \n            <span className=\"vs\">vs</span>\n            <h1><Link to={otherTeamRoute}>{otherTeam}</Link></h1>\n            <h2 className=\"match-date\">{match.date}</h2>\n            <h3 className=\"match-venue\">at {match.venue}</h3>\n            <h3 className=\"match-result\">{match.matchWinner} won by {match.resultMargin} {match.result}</h3>\n        </div>\n\n        <div className=\"additional-detail\">\n            <h3>First Innings</h3>\n            <p>{match.team1}</p>\n            <h3>Second Innings</h3>\n            <p>{match.team2}</p>\n            <h3>Man of the Match</h3>\n            <p>{match.playerOfMatch}</p>\n            <h3>Umpires</h3>\n            <p>{match.umpire1}, {match.umpire2}</p>\n        </div>   \n\n\n        </div>\n    )\n}","import { React } from 'react';\nimport { Link } from 'react-router-dom';\nimport \"./MatchSmallCard.scss\";\n\nexport const MatchSmallCard = ({ teamName, match }) => {\n    if (!match) return null;\n\n    const otherTeam = (match.team1 === teamName ? match.team2 : match.team1)\n    const otherTeamRoute = `/teams/${otherTeam}`\n    const isMatchWon =  teamName === match.matchWinner \n\n\n    return (\n        <div className={isMatchWon ? 'MatchSmallCard won-card' : 'MatchSmallCard lost-card'}>\n            <span className=\"vs\">vs</span>\n            <h1> <Link to={otherTeamRoute}> {otherTeam} </Link> </h1>\n            <p className=\"match-result\">{match.matchWinner} won by {match.resultMargin} {match.result}</p>\n        </div>\n    )\n}","import { React, useEffect, useState } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { PieChart } from 'react-minimal-pie-chart';\nimport { MatchDetailCard } from '../components/MatchDetailCard';\nimport { MatchSmallCard } from '../components/MatchSmallCard';\nimport './TeamPage.scss'\n\nexport const TeamPage = () => {\n\n  const [team, setTeam] = useState({ matches: [] });\n  const { teamName } = useParams();\n\n  useEffect(() => {\n\n    const fetchMatches = async () => {\n\n      const response = await fetch(`${process.env.REACT_APP_API_ROOT_URL}/teams/${teamName}`);\n      const data = await response.json();\n      console.log(data);\n      setTeam(data);\n\n    }\n\n    fetchMatches();\n\n  }, [teamName]);\n\n\n  if (!team || !team.teamName) {\n    return <h1> Team Not Found </h1>\n  }\n\n  return (\n    <div className=\"TeamPage\">\n\n      <div className=\"team-name-section\">\n        <h1 className=\"team-name\">{team.teamName}</h1>\n      </div>\n      <div className=\"win-loss-section\">\n        Wins/Losses\n        <PieChart\n          data={[\n            { title: 'Losses', value: team.totalMatches - team.totalWins, color: '#a34d5d' },\n            { title: 'Wins', value: team.totalWins, color: '#4da375' },\n          ]}\n        />\n      </div>\n\n\n      <div className=\"match-detail-section\">\n        <h3>Latest Matches</h3>\n        <MatchDetailCard teamName={team.teamName} match={team.matches[0]} />\n      </div>\n\n\n      {team.matches.slice(1).map(match => <MatchSmallCard key={match.id} teamName={team.teamName} match={match} />)}\n      <div className=\"more-link\">\n        <Link to={`/teams/${teamName}/matches/${process.env.REACT_APP_END_YEAR}`}> More &gt; </Link> \n      </div>\n\n    </div>\n  );\n\n}","import { React } from 'react';\nimport { Link } from 'react-router-dom';\nimport \"./YearSelector.scss\";\n\nexport const YearSelector = ({teamName}) => {\n\n    let years = [];\n    const startYear = process.env.REACT_APP_START_YEAR;\n    const endYear = process.env.REACT_APP_END_YEAR;\n\n    for (let i = startYear; i <= endYear; i++) {\n        years.push(i);\n    }\n    \n    \n    return (\n        <ol className=\"YearSelector\">\n            {years.map(year => (\n                  <li key={year}>\n                     <Link to={`/teams/${teamName}/matches/${year}`}> {year} </Link>\n                  </li>\n            ))}\n        </ol>\n    );\n}","import { React, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { MatchDetailCard } from '../components/MatchDetailCard';\nimport { YearSelector } from '../components/YearSelector';\nimport \"./MatchPage.scss\";\n\n\nexport const MatchPage = () => {\n\n  const [matches, setMatches] = useState([])\n  const { teamName, year } = useParams();\n\n  useEffect(\n    () => {\n\n      const fetchMatches = async () => {\n        const response = await fetch(`${process.env.REACT_APP_API_ROOT_URL}/teams/${teamName}/matches?year=${year}`);\n        const data = await response.json();\n        setMatches(data);\n      };\n\n      fetchMatches();\n\n    }, [teamName, year]);\n\n\n  return (\n    <div className=\"MatchPage\">\n\n      <div className=\"year-selector\">\n        <h3>Select Year</h3> \n        <YearSelector teamName={teamName} />\n      </div>\n\n      <div>\n        <h1 className=\"page-heading\">{teamName} matches in {year}</h1>\n        {\n          matches.map(match => <MatchDetailCard key={match.id} teamName={teamName} match={match} />)\n        }\n      </div>\n\n    </div>\n  );\n\n}","import { React } from 'react';\nimport { Link } from 'react-router-dom';\nimport './TeamTile.scss';\n\nexport const TeamTile = ({ teamName }) => {\n\n    return (\n        <div className=\"TeamTile\">\n            <h1>\n                <Link to={`/teams/${teamName}`}>\n                    {teamName}\n                </Link>\n            </h1>\n        </div>\n    );\n\n}","import { React, useEffect, useState } from 'react';\nimport { TeamTile } from '../components/TeamTile';\nimport './HomePage.scss';\n\n\nexport const HomePage = () => {\n\n    const [teams, setTeams] = useState([]);\n\n    useEffect(() => {\n\n        const fetchAllTeams = async () => {\n\n            const response = await fetch(`${process.env.REACT_APP_API_ROOT_URL}/teams`);\n            const data = await response.json();\n            console.log(data);\n            setTeams(data);\n\n        }\n\n        fetchAllTeams();\n\n    }, []);\n\n\n\n    return (\n        <div className=\"HomePage\">\n\n            <div className=\"header-section\">\n                <h1 className=\"app-name\">IPL Dashboard</h1>\n            </div>\n\n            <div className=\"team-grid\">\n                {teams.map(team => <TeamTile key={team.id} teamName={team.teamName} />)}\n            </div>\n        </div>\n    );\n\n}","import './App.scss';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { TeamPage } from './pages/TeamPage';\nimport { MatchPage } from './pages/MatchPage';\nimport { HomePage } from './pages/HomePage';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route path=\"/teams/:teamName/matches/:year\">\n            <MatchPage />\n          </Route>\n          <Route path=\"/teams/:teamName\">\n            <TeamPage />\n          </Route>\n          <Route path=\"/\">\n            <HomePage />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}